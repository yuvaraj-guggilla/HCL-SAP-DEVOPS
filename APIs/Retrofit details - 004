
****************************************************************
* Description -  . Fetching Retrofit Details                   *
*------------------------------------------------------------- *
* Created by -   51971059(Parul Trivedi)                       *
* Created on - 2 feb 2023                                      *
* Package -   ZHCLSWJI_001                                     *
* Transpoert request detail verion wise -   ES1K900312         *
* Import ---->  object id                                      *
* Export ---->   Retrofir object                               *
* Tables -----> ztab000007,crmd_orderadm_h,/TMWFLOW/RFITCT,    *
*             /TMWFLOW/TRORD_N,/tmwflow/r_arct,/tmwflow/rtrobjt*                                        *
****************************************************************

  METHOD RETROFIT_PROPERT_GET_ENTITYSET.


    DATA: LS_ENTITY LIKE LINE OF ET_ENTITYSET,
          LT_DD07   TYPE STANDARD TABLE OF DD07V,
          LS_DD07   LIKE LINE OF LT_DD07,
          LT_DD071  TYPE STANDARD TABLE OF DD07V,
          LS_DD071  LIKE LINE OF LT_DD07,
          LT_DD072  TYPE STANDARD TABLE OF DD07V,
          LS_DD072  LIKE LINE OF LT_DD072,
          LT_DD073  TYPE STANDARD TABLE OF DD07V,
          LS_DD073  LIKE LINE OF LT_DD073,
          LT_TAB07  TYPE TABLE OF ZTAB07_STR,
          LS_TAB07  LIKE LINE OF LT_TAB07.

*******************************************************************************
*** Input parameters
*******************************************************************************
    READ TABLE IT_FILTER_SELECT_OPTIONS
     INTO DATA(LS_FILTER_SELECT_OPTIONS)
      WITH KEY PROPERTY = 'OBJECT_ID'.
    DATA(LV_OBJECT) = LS_FILTER_SELECT_OPTIONS-SELECT_OPTIONS[ 1 ]-LOW.

*******************************************************************************
**** fetching data from ztab000007 by joining with crmd_orderadm_h
*******************************************************************************

    SELECT A~PARENT_ID,
           A~ZZFLD000001,
           B~GUID,
           B~OBJECT_ID,
           C~RETROFIT_DONE,
           C~TRORDER_NUMBER,
           D~TRFUNCTION
      FROM  ZTAB000007 AS A                       "ztab000007 table for zzfld000001(transport number)
      JOIN CRMD_ORDERADM_H  AS B                  "crmd_orderadm_h table for object_id
        ON A~PARENT_ID = B~GUID
      JOIN /TMWFLOW/RFITCT AS C                   "/TMWFLOW/RFITCT table for Status
        ON A~ZZFLD000001 = C~TRORDER_NUMBER
      JOIN /TMWFLOW/TRORD_N AS D                  "/TMWFLOW/TRORD_N table for Trfunction
        ON A~ZZFLD000001 = D~TRORDER_NUMBER
      INTO TABLE @DATA(LT_RETRO)
      WHERE B~OBJECT_ID EQ @LV_OBJECT.


    IF LT_RETRO IS NOT INITIAL.
      CALL FUNCTION 'DDUT_DOMVALUES_GET'
          EXPORTING
          NAME          = '/TMWFLOW/RFIT_DONE_D'
          LANGU         = SY-LANGU
*         TEXTS_ONLY    = ' '
        TABLES
          DD07V_TAB     = LT_DD07
        EXCEPTIONS
          ILLEGAL_INPUT = 1
          OTHERS        = 2.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.


      CALL FUNCTION 'DDUT_DOMVALUES_GET'
        EXPORTING
          NAME          = 'TRFUNCTION'
          LANGU         = SY-LANGU
*         TEXTS_ONLY    = ' '
        TABLES
          DD07V_TAB     = LT_DD073
        EXCEPTIONS
          ILLEGAL_INPUT = 1
          OTHERS        = 2.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

    ENDIF.


    LOOP AT LT_RETRO INTO DATA(LS_RETRO).
      LS_TAB07-ZZFLD000001 = LS_RETRO-ZZFLD000001.
      APPEND LS_TAB07 TO LT_TAB07.
    ENDLOOP.

    IF LT_TAB07 IS NOT INITIAL.
                     SELECT A~TRORDER_NUMBER,
                            A~OBJECT,
                            A~OBJ_NAME,
                            A~OBJ_CATEGORIE,
                            A~TAR_REQUEST
                       FROM /TMWFLOW/R_ARCT AS A
           INTO TABLE @DATA(LT_RACT)
         FOR ALL ENTRIES IN @LT_TAB07
                      WHERE A~TRORDER_NUMBER = @LT_TAB07-ZZFLD000001.
    ENDIF.

    CALL FUNCTION 'DDUT_DOMVALUES_GET'
      EXPORTING
        NAME          = '/TMWFLOW/CAT_D'
*       LANGU         = SY-LANGU
*       TEXTS_ONLY    = ' '
      TABLES
        DD07V_TAB     = LT_DD071
      EXCEPTIONS
        ILLEGAL_INPUT = 1
        OTHERS        = 2.
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.
*******************************************************************************
****  fetching data /tmwflow/rtrobjt by joining with ztab000007
*******************************************************************************

    IF LT_RETRO IS NOT INITIAL.
              SELECT A~TRORDER_NUMBER,
                     A~OBJECT,
                     A~OBJ_NAME  ,
                     A~OBJ_CATEGORIE,
                     A~TAR_REQUEST,
                     B~ZZFLD000001
                FROM /TMWFLOW/RTROBJT AS A
                JOIN ZTAB000007 AS B
                  ON A~TRORDER_NUMBER = B~ZZFLD000001
    INTO TABLE @DATA(LT_RTBJT).
    ENDIF.


    CALL FUNCTION 'DDUT_DOMVALUES_GET'
      EXPORTING
        NAME          = '/TMWFLOW/CAT_D'
*       LANGU         = SY-LANGU
*       TEXTS_ONLY    = ' '
      TABLES
        DD07V_TAB     = LT_DD072
      EXCEPTIONS
        ILLEGAL_INPUT = 1
        OTHERS        = 2.
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.

******************************************************************************
** looping to dispaly output from /tmwflow/r_arct
******************************************************************************
    IF LT_RACT IS NOT INITIAL.
      LOOP AT LT_RETRO
         INTO LS_RETRO.
        LS_ENTITY-OBJECT_ID        =  LS_RETRO-OBJECT_ID.

        READ TABLE LT_DD07
              INTO LS_DD07
          WITH KEY DOMVALUE_L       = LS_RETRO-RETROFIT_DONE.
        LS_ENTITY-STATUS       =  LS_DD07-DDTEXT.

        READ TABLE LT_DD073
              INTO LS_DD073
          WITH KEY DOMVALUE_L       = LS_RETRO-TRFUNCTION.
        LS_ENTITY-TRFUNCTION        =  LS_DD073-DDTEXT.

        READ TABLE LT_RACT
         INTO DATA(LS_RACT)
          WITH KEY TRORDER_NUMBER   = LS_RETRO-ZZFLD000001.

        LS_ENTITY-RETROFIT_TR      =    LS_RACT-TRORDER_NUMBER.
        LS_ENTITY-OBJECT           =   LS_RACT-OBJECT.
        LS_ENTITY-OBJ_NAME         =   LS_RACT-OBJ_NAME.
        LS_ENTITY-TAR_REQUEST      =   LS_RACT-TAR_REQUEST.


        READ TABLE LT_DD071
              INTO LS_DD071
          WITH KEY DOMVALUE_L      = LS_RACT-OBJ_CATEGORIE.
        LS_ENTITY-OBJ_CATEGORIE    =   LS_DD071-DDTEXT.

        APPEND LS_ENTITY TO ET_ENTITYSET.
      ENDLOOP.
    ENDIF.

*******************************************************************************
*** looping to dispaly output from /tmwflow/rtrobjt
*******************************************************************************
    IF LT_RTBJT IS NOT INITIAL.
      LOOP AT LT_RETRO
         INTO LS_RETRO.
        LS_ENTITY-OBJECT_ID           =  LS_RETRO-OBJECT_ID.

        READ TABLE LT_DD07
              INTO LS_DD07
          WITH KEY DOMVALUE_L          = LS_RETRO-RETROFIT_DONE.
        LS_ENTITY-STATUS         =  LS_DD07-DDTEXT.

        READ TABLE LT_DD073
              INTO LS_DD073
          WITH KEY DOMVALUE_L          = LS_RETRO-TRFUNCTION.
        LS_ENTITY-TRFUNCTION     =  LS_DD073-DDTEXT.

        READ TABLE LT_RTBJT
         INTO DATA(LS_RTBJT)
          WITH KEY TRORDER_NUMBER      = LS_RETRO-ZZFLD000001.
        LS_ENTITY-RETROFIT_TR          =  LS_RTBJT-TRORDER_NUMBER.
        LS_ENTITY-OBJECT               =  LS_RTBJT-OBJECT.
        LS_ENTITY-OBJ_NAME             =  LS_RTBJT-OBJ_NAME.
        LS_ENTITY-TAR_REQUEST          =  LS_RTBJT-TAR_REQUEST.

        READ TABLE LT_DD072
              INTO LS_DD072
          WITH KEY DOMVALUE_L          = LS_RTBJT-OBJ_CATEGORIE.
        LS_ENTITY-OBJ_CATEGORIE        =  LS_DD072-DDTEXT.

        APPEND LS_ENTITY TO ET_ENTITYSET.
      ENDLOOP.
    ENDIF.




**TRY.
*CALL METHOD SUPER->RETROFIT_PROPERT_GET_ENTITYSET
*  EXPORTING
*    IV_ENTITY_NAME           =
*    IV_ENTITY_SET_NAME       =
*    IV_SOURCE_NAME           =
*    IT_FILTER_SELECT_OPTIONS =
*    IS_PAGING                =
*    IT_KEY_TAB               =
*    IT_NAVIGATION_PATH       =
*    IT_ORDER                 =
*    IV_FILTER_STRING         =
*    IV_SEARCH_STRING         =
**    IO_TECH_REQUEST_CONTEXT  =
**  IMPORTING
**    ET_ENTITYSET             =
**    ES_RESPONSE_CONTEXT      =
*    .
** CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION .
** CATCH /IWBEP/CX_MGW_TECH_EXCEPTION .
**ENDTRY.
  ENDMETHOD.
